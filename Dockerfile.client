FROM rust:1.52.1 AS build-rust

  WORKDIR /usr/local/bin

  RUN curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
  RUN wget https://github.com/TomWright/dasel/releases/download/v1.15.0/dasel_linux_amd64 -O dasel
  RUN chmod u+x dasel

  WORKDIR /app

  RUN mkdir -p www
  RUN mkdir -p www/pkg

  WORKDIR /app/rust

  COPY rust/client client

  COPY rust/server/Cargo.toml server/
  RUN mkdir -p server/src && echo "fn main() {}" > server/src/main.rs

  COPY rust/server/models/Cargo.toml server/models/
  RUN mkdir -p server/models/src && touch server/models/src/lib.rs

  RUN dasel put document -f server/Cargo.toml -s ".target.cfg(not(target_arch = \"wasm32\"))" dependencies={}
  RUN dasel put document -f server/models/Cargo.toml -s ".target.cfg(not(target_arch = \"wasm32\"))" dependencies={}

  COPY rust/Cargo.lock rust/Cargo.toml .

  WORKDIR /app/rust/client

  RUN cargo fetch --target=wasm32-unknown-unknown

  WORKDIR /app

  COPY rust rust

  WORKDIR /app/rust/client

  ARG SERVER_HOST
  ENV SERVER_HOST=$SERVER_HOST

  RUN wasm-pack build --out-dir ../../www/pkg --release

FROM node:12.20.2 as build-js

  RUN apt-get update && apt-get install -y jq

  WORKDIR /app/www

  RUN mkdir -p pkg
  COPY www/package.json www/yarn.lock ./
  RUN yarn --ignore-engines
  COPY --from=build-rust /app/www/pkg ./pkg
  RUN yarn add ./pkg --ignore-engines
  RUN yarn --ignore-engines
  COPY www ./
  RUN yarn build

FROM nginx:1.21.0

  COPY nginx /etc/nginx
  COPY --from=build-js /app/www/dist /usr/share/nginx/html
  RUN ROOT=/usr/share/nginx/html envsubst < /etc/nginx/nginx.conf.template | sed -e 's/ยง/$/g' > /etc/nginx/nginx.conf

  EXPOSE 3000
  CMD ["nginx", "-g", "daemon off;"]
