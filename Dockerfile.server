FROM rust:1.52.1 AS build-rust

  WORKDIR /app/rust

  COPY rust/Cargo.lock rust/Cargo.toml .

  WORKDIR /app/rust/server

  COPY \
    rust/server/Cargo.toml \
    rust/server/rust-toolchain.toml \
    .

  COPY rust/server/api/Cargo.toml     api/
  COPY rust/server/auth/Cargo.toml    auth/
  COPY rust/server/db_conn/Cargo.toml db_conn/
  COPY rust/server/models/Cargo.toml  models/
  COPY rust/server/queries/Cargo.toml queries/
  COPY rust/server/result/Cargo.toml  result/
  COPY rust/server/schema/Cargo.toml  schema/

  RUN mkdir -p src         && echo "fn main() {}" > src/main.rs
  RUN mkdir -p api/src     && echo "fn main() {}" > api/src/main.rs
  RUN mkdir -p auth/src    && echo "fn main() {}" > auth/src/main.rs
  RUN mkdir -p db_conn/src && echo "fn main() {}" > db_conn/src/main.rs
  RUN mkdir -p models/src  && echo "fn main() {}" > models/src/main.rs
  RUN mkdir -p queries/src && echo "fn main() {}" > queries/src/main.rs
  RUN mkdir -p result/src  && echo "fn main() {}" > result/src/main.rs
  RUN mkdir -p schema/src  && echo "fn main() {}" > schema/src/main.rs

  RUN cargo fetch

  COPY rust/server/ .

  RUN cargo build --release

FROM ubuntu

  WORKDIR /app

  RUN apt-get update

  RUN apt-get install -y curl ca-certificates gnupg lsb-release

  RUN curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
  RUN sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
  RUN lsb_release -cs
  RUN apt-get update
  RUN apt-get -y install postgresql-client-13

  COPY --from=build-rust /app/rust/server/target/release/server /app/server

  EXPOSE 8000
  CMD ["/app/server"]
